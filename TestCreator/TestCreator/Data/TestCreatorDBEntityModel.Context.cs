//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace TestCreator.Data
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class TestCreatorEntities : DbContext
    {
        public TestCreatorEntities()
            : base("name=TestCreatorEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Role> Role { get; set; }
        public virtual DbSet<Stanowiska> Stanowiska { get; set; }
        public virtual DbSet<Testy> Testy { get; set; }
        public virtual DbSet<Uzytkownicy> Uzytkownicy { get; set; }
        public virtual DbSet<sysdiagrams> sysdiagrams { get; set; }
        public virtual DbSet<Odpowiedz> Odpowiedz { get; set; }
        public virtual DbSet<Pytania> Pytania { get; set; }
    
        public virtual ObjectResult<SysUsersContener> GetAllUsers()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SysUsersContener>("GetAllUsers");
        }
    
        public virtual int DeleteUser(Nullable<long> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteUser", idParameter);
        }
    
        public virtual int UserActualization(Nullable<long> idUzytkownika, string login, string name, string haslo, Nullable<long> id_rola)
        {
            var idUzytkownikaParameter = idUzytkownika.HasValue ?
                new ObjectParameter("idUzytkownika", idUzytkownika) :
                new ObjectParameter("idUzytkownika", typeof(long));
    
            var loginParameter = login != null ?
                new ObjectParameter("login", login) :
                new ObjectParameter("login", typeof(string));
    
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            var hasloParameter = haslo != null ?
                new ObjectParameter("haslo", haslo) :
                new ObjectParameter("haslo", typeof(string));
    
            var id_rolaParameter = id_rola.HasValue ?
                new ObjectParameter("id_rola", id_rola) :
                new ObjectParameter("id_rola", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UserActualization", idUzytkownikaParameter, loginParameter, nameParameter, hasloParameter, id_rolaParameter);
        }
    
        public virtual int DodawanieUzytkownika(string login, string name, string haslo, Nullable<int> id_rola)
        {
            var loginParameter = login != null ?
                new ObjectParameter("login", login) :
                new ObjectParameter("login", typeof(string));
    
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            var hasloParameter = haslo != null ?
                new ObjectParameter("haslo", haslo) :
                new ObjectParameter("haslo", typeof(string));
    
            var id_rolaParameter = id_rola.HasValue ?
                new ObjectParameter("id_rola", id_rola) :
                new ObjectParameter("id_rola", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DodawanieUzytkownika", loginParameter, nameParameter, hasloParameter, id_rolaParameter);
        }
    
        public virtual int sp_alterdiagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_alterdiagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_creatediagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_creatediagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_dropdiagram(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_dropdiagram", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagramdefinition_Result> sp_helpdiagramdefinition(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagramdefinition_Result>("sp_helpdiagramdefinition", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagrams_Result> sp_helpdiagrams(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagrams_Result>("sp_helpdiagrams", diagramnameParameter, owner_idParameter);
        }
    
        public virtual int sp_renamediagram(string diagramname, Nullable<int> owner_id, string new_diagramname)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var new_diagramnameParameter = new_diagramname != null ?
                new ObjectParameter("new_diagramname", new_diagramname) :
                new ObjectParameter("new_diagramname", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_renamediagram", diagramnameParameter, owner_idParameter, new_diagramnameParameter);
        }
    
        public virtual int sp_upgraddiagrams()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_upgraddiagrams");
        }
    
        public virtual int AktualizacjaUzytkownika(Nullable<int> idUzytkownika, string login, string name, string haslo, Nullable<System.DateTime> data_dodania, Nullable<bool> is_visible, Nullable<int> id_rola)
        {
            var idUzytkownikaParameter = idUzytkownika.HasValue ?
                new ObjectParameter("idUzytkownika", idUzytkownika) :
                new ObjectParameter("idUzytkownika", typeof(int));
    
            var loginParameter = login != null ?
                new ObjectParameter("login", login) :
                new ObjectParameter("login", typeof(string));
    
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            var hasloParameter = haslo != null ?
                new ObjectParameter("haslo", haslo) :
                new ObjectParameter("haslo", typeof(string));
    
            var data_dodaniaParameter = data_dodania.HasValue ?
                new ObjectParameter("data_dodania", data_dodania) :
                new ObjectParameter("data_dodania", typeof(System.DateTime));
    
            var is_visibleParameter = is_visible.HasValue ?
                new ObjectParameter("is_visible", is_visible) :
                new ObjectParameter("is_visible", typeof(bool));
    
            var id_rolaParameter = id_rola.HasValue ?
                new ObjectParameter("id_rola", id_rola) :
                new ObjectParameter("id_rola", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AktualizacjaUzytkownika", idUzytkownikaParameter, loginParameter, nameParameter, hasloParameter, data_dodaniaParameter, is_visibleParameter, id_rolaParameter);
        }
    
        public virtual ObjectResult<DodawanieUzytkownika1_Result> DodawanieUzytkownika1(string login, string name, string haslo, Nullable<int> id_rola)
        {
            var loginParameter = login != null ?
                new ObjectParameter("login", login) :
                new ObjectParameter("login", typeof(string));
    
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            var hasloParameter = haslo != null ?
                new ObjectParameter("haslo", haslo) :
                new ObjectParameter("haslo", typeof(string));
    
            var id_rolaParameter = id_rola.HasValue ?
                new ObjectParameter("id_rola", id_rola) :
                new ObjectParameter("id_rola", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<DodawanieUzytkownika1_Result>("DodawanieUzytkownika1", loginParameter, nameParameter, hasloParameter, id_rolaParameter);
        }
    
        public virtual int sc_deleteUser(Nullable<long> id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sc_deleteUser", idParameter);
        }
    
        public virtual ObjectResult<sc_getAllUsers_Result1> sc_getAllUsers()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sc_getAllUsers_Result1>("sc_getAllUsers");
        }
    
        public virtual int sp_AktualizacjaUzytkownika(Nullable<long> idUzytkownika, string login, string name, string haslo, Nullable<long> id_rola)
        {
            var idUzytkownikaParameter = idUzytkownika.HasValue ?
                new ObjectParameter("idUzytkownika", idUzytkownika) :
                new ObjectParameter("idUzytkownika", typeof(long));
    
            var loginParameter = login != null ?
                new ObjectParameter("login", login) :
                new ObjectParameter("login", typeof(string));
    
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            var hasloParameter = haslo != null ?
                new ObjectParameter("haslo", haslo) :
                new ObjectParameter("haslo", typeof(string));
    
            var id_rolaParameter = id_rola.HasValue ?
                new ObjectParameter("id_rola", id_rola) :
                new ObjectParameter("id_rola", typeof(long));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_AktualizacjaUzytkownika", idUzytkownikaParameter, loginParameter, nameParameter, hasloParameter, id_rolaParameter);
        }
    }
}
